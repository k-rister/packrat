name: crucible-ci

on:
  pull_request:
    branches: [ master ]
    paths-ignore:
    - LICENSE
    - '**.md'
    - .github/workflows/faux-crucible-ci.yaml
    - 'docs/**'
  workflow_dispatch:

jobs:
  generate-job-matrix-parameters:
    runs-on: ubuntu-latest
    outputs:
      userenvs: ${{ steps.get-userenvs.outputs.userenvs }}
      github_hosted_scenarios: ${{ steps.get-scenarios-github.outputs.scenarios }}
      self_hosted_scenarios: ${{ steps.get-scenarios-self.outputs.scenarios }}
    steps:
    - name: checkout crucible-ci
      uses: actions/checkout@v2
      with:
        repository: perftool-incubator/crucible-ci
        ref: main
        path: crucible-ci
    - name: checkout rickshaw
      uses: actions/checkout@v2
      with:
        repository: perftool-incubator/rickshaw
        ref: master
        path: rickshaw
    - name: run get-userenvs
      id: get-userenvs
      uses: ./crucible-ci/.github/actions/get-userenvs
      with:
        rickshaw-directory: "./rickshaw"
    - name: run get-scenarios-github
      id: get-scenarios-github
      uses: ./crucible-ci/.github/actions/get-scenarios
      with:
        runner-type: "github"
    - name: run get-scenarios-self
      id: get-scenarios-self
      uses: ./crucible-ci/.github/actions/get-scenarios
      with:
        runner-type: "self"
        runner-tags: "cpu-partitioning,remotehost"

  display-job-matrix-parameters:
    runs-on: ubuntu-latest
    needs: generate-job-matrix-parameters
    steps:
    - name: Echo generate-job-matrix-parameters outputs
      run: echo "${{ toJSON(needs.generate-job-matrix-parameters.outputs) }}"

  crucible-ci-github-runners:
    runs-on: ubuntu-latest
    needs:
    - generate-job-matrix-parameters
    - display-job-matrix-parameters
    strategy:
      fail-fast: false
      matrix:
        scenario: ${{ fromJSON(needs.generate-job-matrix-parameters.outputs.github_hosted_scenarios) }}
        userenv: ${{ fromJSON(needs.generate-job-matrix-parameters.outputs.userenvs) }}
    steps:
    - name: Matrix Parameters => (${{ matrix.scenario.enabled }}, ${{ matrix.scenario.endpoint }}, ${{ matrix.scenario.benchmark }}, ${{ matrix.userenv }})
      run: |
        echo "enabled=${{ matrix.scenario.enabled }}"
        echo "endpoint=${{ matrix.scenario.endpoint }}"
        echo "benchmark=${{ matrix.scenario.benchmark }}"
        echo "userenv=${{ matrix.userenv }}"
    - name: checkout packrat
      uses: actions/checkout@v2
      with:
        path: packrat
    - name: checkout crucible-ci
      uses: actions/checkout@v2
      with:
        repository: perftool-incubator/crucible-ci
        ref: main
        path: crucible-ci
    - name: import secret
      env:
        CLIENT_SERVER_REGISTRY_AUTH_SECRET: ${{ secrets.CRUCIBLE_CI_ENGINES_REGISTRY_AUTH }}
      if: env.CLIENT_SERVER_REGISTRY_AUTH_SECRET != ''
      run: sudo bash -c "echo \"$CLIENT_SERVER_REGISTRY_AUTH_SECRET\" > /root/crucible-ci-engines-token.json"
    - name: run crucible-ci->integration-tests
      if: ${{ matrix.scenario.enabled }}
      uses: ./crucible-ci/.github/actions/integration-tests
      with:
        artifact_tag: "crucible-ci-github-runners__${{ matrix.scenario.endpoint }}-${{ matrix.scenario.benchmark }}-${{ matrix.userenv }}"
        ci_endpoint: "${{ matrix.scenario.endpoint }}"
        scenarios: "${{ matrix.scenario.benchmark }}"
        userenvs: "${{ matrix.userenv }}"
        run_samples: 3
        repeat_runs: "yes"
        ci_target: "packrat"
        ci_target_dir: ${{ github.workspace }}/packrat
    - name: skip crucible-ci->integration-tests
      if: ${{ ! matrix.scenario.enabled }}
      run: echo "crucible-ci->integration-tests not enabled"

  crucible-ci-self-hosted-runners:
    runs-on: [ self-hosted, cpu-partitioning, remotehost ]
    needs:
    - generate-job-matrix-parameters
    - display-job-matrix-parameters
    strategy:
      fail-fast: false
      matrix:
        scenario: ${{ fromJSON(needs.generate-job-matrix-parameters.outputs.self_hosted_scenarios) }}
        userenv: ${{ fromJSON(needs.generate-job-matrix-parameters.outputs.userenvs) }}
    steps:
    - name: Matrix Parameters => (${{ matrix.scenario.enabled }}, ${{ matrix.scenario.endpoint }}, ${{ matrix.scenario.benchmark }}, ${{ matrix.userenv }})
      run: |
        echo "enabled=${{ matrix.scenario.enabled }}"
        echo "endpoint=${{ matrix.scenario.endpoint }}"
        echo "benchmark=${{ matrix.scenario.benchmark }}"
        echo "userenv=${{ matrix.userenv }}"
    - name: checkout packrat
      uses: actions/checkout@v2
      with:
        path: packrat
    - name: checkout crucible-ci
      uses: actions/checkout@v2
      with:
        repository: perftool-incubator/crucible-ci
        ref: main
        path: crucible-ci
    - name: import secret
      env:
        CLIENT_SERVER_REGISTRY_AUTH_SECRET: ${{ secrets.CRUCIBLE_CI_ENGINES_REGISTRY_AUTH }}
      if: env.CLIENT_SERVER_REGISTRY_AUTH_SECRET != ''
      run: sudo bash -c "echo \"$CLIENT_SERVER_REGISTRY_AUTH_SECRET\" > /root/crucible-ci-engines-token.json"
    - name: run crucible-ci->integration-tests
      if: ${{ matrix.scenario.enabled }}
      uses: ./crucible-ci/.github/actions/integration-tests
      with:
        artifact_tag: "crucible-ci-self-hosted-runners__${{ matrix.scenario.endpoint }}-${{ matrix.scenario.benchmark }}-${{ matrix.userenv }}"
        ci_endpoint: "${{ matrix.scenario.endpoint }}"
        scenarios: "${{ matrix.scenario.benchmark }}"
        userenvs: "${{ matrix.userenv }}"
        run_samples: 3
        repeat_runs: "yes"
        ci_target: "packrat"
        ci_target_dir: ${{ github.workspace }}/packrat
    - name: skip crucible-ci->integration-tests
      if: ${{ ! matrix.scenario.enabled }}
      run: echo "crucible-ci->integration-tests not enabled"

  crucible-ci-complete:
    runs-on: ubuntu-latest
    needs:
    - crucible-ci-github-runners
    - crucible-ci-self-hosted-runners
    steps:
    - name: Confirm Success
      run: echo "crucible-ci-complete"
